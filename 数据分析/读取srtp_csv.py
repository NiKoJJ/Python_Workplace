"""
describe the RSSI DataFrame
@time:2020/10/29
@author:nikojj
@file:the data of srtp's RSSI
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from matplotlib import cm


def bodongtu():
    """
    :return:  特征点所对应的一个AP RSSI 波动图
    """
    # 通过pd.read.csv()读取逗号分隔符文件，正常应以.csv，这里读取格式为txt,实际证明也可以读取
    df = pd.read_csv('C:/ProgramData/PassMark/WirelessMon/张A-srtp02.txt')
    # y1 = df['Percentage(%)']
    y2 = df['Strength(dBm)']
    y2_head = y2.head(20)  # 以前20个数作为基准
    x = np.arange(20)  # 因为是间隔3秒收集的RSSI，故这里直接默认步长1效果相同

    y3 = [-77, -77, -76, -77, -77, -78, -78, -78, -78, -75, -78, -77, -77, -76]
    x3 = np.arange(len(y3))

    '''
     ：需要满足 x.size=y2.head.size 
    '''
    y2_describe = y2_head.describe()  # 对RSSI值进行统计分析
    print(y2_describe)  # 打印

    # plt.scatter(x,y1,color='red',marker='o') # 强度百分比,其实强度百分比的图像与RSSI值的图像相同，这里直接注释掉
    # plt.scatter(x, y2_head, color='green', marker='^')  # RSSI分布 三角符号
    # plt.xlabel("with time going")
    # plt.ylabel("RSSI")
    # plt.grid(True)  # 显示格网，感觉视觉效果较好
    # plt.title('A-srtp')
    # plt.savefig('D:/文献&资料/Srtp/result/生成图像/波动图.jpg', dpi=300)
    # plt.show()

    x2 = np.arange(y2.size)
    fig = plt.figure()
    ax1 = fig.add_subplot(111)
    ax1.set_title('A-srtp02')
    plt.xlabel("Time")
    plt.ylim(-82, -72)
    plt.ylabel("RSSI")
    ax1.plot(x2, y2)
    ax1.plot(x3, y3, 'red')
    plt.savefig('D:/文献&资料/Srtp/result/生成图像/波动图_A_srtp02.png', dpi=300)
    plt.show()


def fenxitu():
    """
     : 不同点位对相同AP所接收RSSI值随距离、多径干扰等因素而不同
    """
    fig = plt.figure()  # 定义新的三维坐标轴
    ax3 = plt.axes(projection='3d')

    # 为了便于立体观察，并没有将G点放入
    # z1 = [-65.9, -77.15, -75.25, -55.45, -66.95, -67]  # strp01
    # z2 = [-77.7, -88.35, -84.45, -73.5, -65.05, -59.85]  # srtp02
    # z3 = [-73.95, -67.65, -77.25, -79.45, -82.55, -73.6]  # srtp03
    # z4 = [-88.95, -88.75, -88, -73.15, -81.05, -82]  # srtp04
    # z5 = [-78.85, -80.2, -87.45, -61.75, -70.3, -81.85]  # srtp05

    z1 = [-68.82, -61.25, -51.93, -62.93, -65.33, -69.1, -69.63, -76.69, -77.18, -66.85, -68.05, -65.27, -77.06, -74.5,
          -55.31, -66.76,
          -65.82, -71.29, -66.3, -85.85, -67.85, -56.8, -59.9, -61.45, -56.4, -62.5, -77.3, -71.2, -89.45, -69.35,
          -83.05, -69.6, -73.4,
          -75.55, -79.3, -73.69, -77.18, -77.93, -74, -81.92, -77.73, -74.07, -69.94]  # strp01
    z2 = [-60.2, -41.91, -66.75, -61.64, -54.91, -50.33, -55.4, -61.43, -53.35, -60.89, -61.08, -77.07, -81.17, -82.6,
          -73.2, -64.21, -59.72, -85.38, -75.45, -80.95, -87.75, -89.2, -80, -70.25, -87.8, -83.15, -90.25, -86.55,
          -88.85, -87.55, -87, -81.75, -88.2, -79.2, -90.25, -73.5, -86.22, -90.41, -88.14, -90, -82, -86.79,
          -87.36]  # srtp02
    z3 = [-88.4, -80.9, -82, -79, -83.53, -83.93, -90.4, -85, -81.35, -86.05, -82.21, -73.89, -66.5, -77, -79.06,
          -82.29, -72.64, -67.2, -83.9, -89.55, -92.3, -90.65, -86, -89.15, -81.85, -70.4, -89.35, -89.55, -88.4,
          -91.7, -86.15, -82.45, -83.9, -87.05, -88.85, -88.8, -91.78, -89.83, -89.69, -89.29, -85.25, -88.17,
          -90]  # srtp03
    z4 = [-77.88, -72.92, -73.38, -77.94, -80.06, -78.16, -79, -88.31, -85.19, -83.14, -83.13, -88.53, -88.45,
          -87.38, -72.71, -81.11, -81.38, -88, -84.7, -81.85, -85.9, -78.65, -89.6, -87.9, -71.8, -74.95, -68.4,
          -56.65, -69.15, -71.45, -70.7, -71.65, -79.1, -77.9, -67.2, -90.71, -82.47, -70, -69.67, -63.13, -71.4,
          -78, -65.06]  # srtp04
    z5 = [-75, -62.75, -67.3, -67.15, -69, -66, -76, -66.47, -69.5, -63.11, -72.81, -77.69, -79.08, -85.83,
          -61.07, -68.75, -80.83, -79.2, -79, -83.7, -85.15, -70.4, -78.85, -89.55, -66.5, -64, -68.7, -77.65,
          -71.6, -60.85, -69.8, -58.65, -66.5, -49.05, -38.7, -58.17, -65.86, -53.67, -57, -56.77, -52.6,
          -45.08, -55.7]  # srtp05

    # 之前所设置的特征点，A　Ｂ　Ｃ　Ｄ　Ｅ　Ｆ　Ｇ
    x = [0, 6, 12, 12, 8, 4, 0, 0, 4, 8, 12, 14, 14, 21, 21, 12, 12, 13,
         13, 14, 16, 18, 14, 13, 14, 20, 21, 26, 31, 31, 26, 21, 21, 26,
         31, 38, 38, 38, 38, 34, 34, 34, 34]
    y = [13, 13, 13, 6.5, 6.5, 6.5, 6.5, 0, 0, 0, 0, 13, 19, 19, 13, 13, 19, 21, 5,
         0, 5, 8, 11, 8, 8, 6, 1, 1, 1, 6, 6, 6, 12, 12, 12, 12,
         8, 4, 1, 1, 4, 8, 12]

    ax3.scatter(x, y, z1, c='r', label='Srtp01')  # 散点图
    ax3.plot3D(x,y,z1,'gray')  # 折线
    ax3.scatter(x, y, z2, c='g', label='Srtp02')
    # ax3.plot3D(x, y, z2, 'gray')
    ax3.scatter(x, y, z3, c='b', label='Srtp03')
    ax3.plot3D(x, y, z3, 'gray')
    ax3.scatter(x, y, z4, label='Srtp04')
    # ax3.plot3D(x,y,z4,'gray')
    ax3.scatter(x, y, z5, label='Srtp05')
    # ax3.plot3D(x,y,z5,'gray')

    # ax3.set_xlim(1,6)  # 坐标轴区间
    # ax3.set_ylim(1,5)
    ax3.set_zlabel('Strength(dBm)')
    ax3.set_xlabel('X')  # label
    # ax3.set_zlabel('Y')  # 只显示两个label
    ax3.legend()
    plt.rcParams['figure.dpi'] = 300  # 分辨率
    plt.savefig('D:/文献&资料/Srtp/result/生成图像/分析图.jpg', dpi=300)
    plt.show()

    # ax = fig.gca(projection='3d')
    # yy=list(zip(x,y))
    # xx = list(zip(x, y))
    # print(xx)
    # ax.plot(xx, yy, z1)
    # plt.show()


if __name__ == '__main__':
    bodongtu()
    fenxitu()
